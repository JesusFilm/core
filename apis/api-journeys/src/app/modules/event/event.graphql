interface Event {
  id: ID!
  journeyId: ID!
  createdAt: DateTime!
  label: String
  value: String
}

type JourneyEvent implements Event {
  id: ID!
  journeyId: ID!
  createdAt: DateTime!
  label: String
  value: String

  journey: Journey
  visitor: Visitor
  journeyVisitor: JourneyVisitor
  typename: String

  action: ButtonAction
  actionValue: String
  messagePlatform: MessagePlatform

  language: Language

  email: String

  blockId: String

  position: Float
  source: VideoBlockSource
  progress: Int
}

type JourneyEventsEdge {
  cursor: String!
  node: JourneyEvent!
}

type JourneyEventsConnection {
  edges: [JourneyEventsEdge!]!
  pageInfo: PageInfo!
}

input JourneyEventsFilter {
  typenames: [String!]
  periodRangeStart: DateTime
  periodRangeEnd: DateTime
}

extend type Query {
  journeyEventsConnection(
    journeyId: ID!
    filter: JourneyEventsFilter
    first: Int
    after: String
  ): JourneyEventsConnection!
}
