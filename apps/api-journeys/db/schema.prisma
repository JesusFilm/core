// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = env("PRISMA_LOCATION")
}

datasource db {
  provider = "postgresql"
  url      = env("PG_DATABASE_URL")
}

model Event {
  id        String   @id @default(uuid())
  typename  String
  journeyId String?
  blockId   String?
  stepId    String?
  createdAt DateTime @default(now())
  label     String?
  value     String?
  extra     Json?
  Visitor   Visitor? @relation(fields: [visitorId], references: [id])
  visitorId String?

  @@index([id, journeyId, visitorId, blockId])
}

enum MessagePlatform {
  facebook
  telegram
  whatsApp
  instagram
  viber
  vk
  snapchat
  skype
  line
  tikTok
}

enum VisitorStatus {
  star
  prohibited
  checkMarkSymbol
  thumbsUp
  thumbsDown
  partyPopper
  warning
  robotFace
  redExclamationMark
  redQuestionMark
}

enum DeviceType {
  console
  mobile
  tablet
  smarttv
  wearable
  embedded
}

model Visitor {
  id                        String           @id
  createdAt                 DateTime         @unique @default(now())
  countryCode               String?
  email                     String?
  events                    Event[]
  lastChatStartedAt         DateTime?
  lastChatPlatform          MessagePlatform?
  lastStepViewedAt          String?
  lastLinkAction            String?
  lastTextResponse          String?
  lastRadioQuestion         String?
  lastRadioOptionSubmission String?
  messagePlatform           MessagePlatform?
  messagePlatformId         String?
  name                      String?
  notes                     String?
  status                    VisitorStatus?
  team                      Team             @relation(fields: [teamId], references: [id])
  teamId                    String
  userId                    String
  userAgent                 Json?

  @@index([id, teamId, createdAt, userId])
}

model Team {
  id           String    @id
  title        String
  contactEmail String?
  createdAt    DateTime  @default(now())
  Visitor      Visitor[]
}

enum UserJourneyRole {
  inviteRequested
  editor
  owner
}

model UserJourney {
  id        String          @id @default(uuid())
  userId    String
  journeyId String
  role      UserJourneyRole
  openedAt  DateTime?       @default(now())

  @@unique([journeyId, userId])
}
