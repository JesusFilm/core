type EmailPreference {
  email: String!
  unsubscribeAll: Boolean!
  teamInvite: Boolean!
  teamRemoved: Boolean!
  teamInviteAccepted: Boolean!
  journeyEditInvite: Boolean!
  journeyRequestApproved: Boolean!
  journeyAccessRequest: Boolean!
}

extend type Query {
  emailPreferences: [EmailPreference]
  emailPreference(id: ID!, idType: String!): EmailPreference
}

input EmailPreferenceUpdateInput {
  email: String!
  unsubscribeAll: Boolean!
  teamInvite: Boolean!
  teamRemoved: Boolean!
  teamInviteAccepted: Boolean!
  journeyEditInvite: Boolean!
  journeyRequestApproved: Boolean!
  journeyAccessRequest: Boolean!
}

extend type Mutation {
  updateEmailPreference(input: EmailPreferenceUpdateInput!): EmailPreference
  findOrCreateEmailPreference(email: String!): EmailPreference
}
