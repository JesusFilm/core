enum ButtonAction {
  NavigateAction
  NavigateToBlockAction
  NavigateToJourneyAction
  LinkAction
}

input ButtonClickEventCreateInput {
  """
  ID should be unique Event UUID (Provided for optimistic mutation result matching)
  """
  id: ID
  blockId: ID!
  """
  id of the parent stepBlock
  """
  stepId: ID
  """
  stepName of the parent stepBlock
  """
  label: String
  """
  label of the button
  """
  value: String
  """
  Action type of the button when it was clicked
  """
  action: ButtonAction
  """
  The label for each corresponding action, mapping below:
  NavigateAction - undefined
  NavigateToBlockAction - StepName (generated in client) of the StepBlock
  NavigateToJourneyAction - slug of the journey
  LinkAction - url of the link
  """
  actionValue: String
}

type ButtonClickEvent implements Event {
  id: ID!
  """
  ID of the journey that the buttonBlock belongs to
  """
  journeyId: ID!
  """
  time event was created
  """
  createdAt: DateTime!
  """
  stepName of the parent stepBlock
  """
  label: String
  """
  label of the button
  """
  value: String
  """
  Action type of the button when it was clicked
  """
  action: ButtonAction
  """
  The label for each corresponding action, mapping below:
  NavigateAction - null
  NavigateToBlockAction - StepName (generated in client) of the StepBlock
  NavigateToJourneyAction - slug of the journey
  LinkAction - url of the link
  """
  actionValue: String
}

enum MessagePlatform {
  facebook
  telegram
  whatsApp
  instagram
  viber
  vk
  snapchat
  skype
  line
  tikTok
}

input ChatOpenEventCreateInput {
  """
  ID should be unique Event UUID (Provided for optimistic mutation result matching)
  """
  id: ID
  blockId: ID!
  """
  id of the parent stepBlock
  """
  stepId: ID
  """
  messagePlatform of the link used for chat
  """
  value: MessagePlatform
}

type ChatOpenEvent implements Event {
  id: ID!
  """
  ID of the journey that the buttonBlock belongs to
  """
  journeyId: ID!
  """
  time event was created
  """
  createdAt: DateTime!
  """
  null for ChatOpenEvent
  """
  label: String
  """
  messagePlatform of the link used for chat
  """
  value: String
  """
  messagePlatform of the link used for chat (based on the messagePlatform in the value field)
  """
  messagePlatform: MessagePlatform
}

extend type Mutation {
  buttonClickEventCreate(input: ButtonClickEventCreateInput!): ButtonClickEvent!
  chatOpenEventCreate(input: ChatOpenEventCreateInput!): ChatOpenEvent!
}
