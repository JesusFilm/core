enum ButtonAction {
  NavigateToBlockAction
  LinkAction
  EmailAction
}

input ButtonClickEventCreateInput {
  """
  ID should be unique Event UUID (Provided for optimistic mutation result matching)
  """
  id: ID
  blockId: ID!
  """
  id of the parent stepBlock
  """
  stepId: ID
  """
  stepName of the parent stepBlock
  """
  label: String
  """
  label of the button
  """
  value: String
  """
  Action type of the button when it was clicked
  """
  action: ButtonAction
  """
  The label for each corresponding action, mapping below:
  NavigateToBlockAction - StepName (generated in client) of the StepBlock
  LinkAction - url of the link
  """
  actionValue: String
}

type ButtonClickEvent implements Event {
  id: ID!
  """
  ID of the journey that the buttonBlock belongs to
  """
  journeyId: ID!
  """
  time event was created
  """
  createdAt: DateTime!
  """
  stepName of the parent stepBlock
  """
  label: String
  """
  label of the button
  """
  value: String
  """
  Action type of the button when it was clicked
  """
  action: ButtonAction
  """
  The label for each corresponding action, mapping below:
  NavigateToBlockAction - StepName (generated in client) of the StepBlock
  LinkAction - url of the link
  """
  actionValue: String
}

enum MessagePlatform {
  facebook
  telegram
  whatsApp
  instagram
  viber
  vk
  snapchat
  skype
  line
  tikTok
  custom
  globe2
  globe3
  messageText1
  messageText2
  send1
  send2
  messageChat2
  messageCircle
  messageNotifyCircle
  messageNotifySquare
  messageSquare
  mail1
  linkExternal
  home3
  home4
  helpCircleContained
  helpSquareContained
  shieldCheck
  menu1
  checkBroken
  checkContained
  settings
}

input ChatOpenEventCreateInput {
  """
  ID should be unique Event UUID (Provided for optimistic mutation result matching)
  """
  id: ID
  blockId: ID!
  """
  id of the parent stepBlock
  """
  stepId: ID
  """
  messagePlatform of the link used for chat
  """
  value: MessagePlatform
}

type ChatOpenEvent implements Event {
  id: ID!
  """
  ID of the journey that the buttonBlock belongs to
  """
  journeyId: ID!
  """
  time event was created
  """
  createdAt: DateTime!
  """
  null for ChatOpenEvent
  """
  label: String
  """
  messagePlatform of the link used for chat
  """
  value: String
  """
  messagePlatform of the link used for chat (based on the messagePlatform in the value field)
  """
  messagePlatform: MessagePlatform
}

extend type Mutation {
  buttonClickEventCreate(input: ButtonClickEventCreateInput!): ButtonClickEvent!
  chatOpenEventCreate(input: ChatOpenEventCreateInput!): ChatOpenEvent!
}
