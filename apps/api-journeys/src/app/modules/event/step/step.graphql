input StepViewEventCreateInput {
  """
  ID should be unique Event UUID (Provided for optimistic mutation result matching)
  """
  id: ID
  blockId: ID!
  """
  Value should be the stepName of the step block
  """
  value: String
}

type StepViewEvent implements Event {
  id: ID!
}

input StepNextEventCreateInput {
  """
  ID should be unique Event UUID (Provided for optimistic mutation result matching)
  """
  id: ID
  blockId: ID!
  stepId: ID
  nextStepId: ID!
  """
  Label should be the stepName of the step block
  """
  label: String
  """
  Value should be the stepName of the next step block
  """
  value: String
}

type StepNextEvent implements Event {
  id: ID!
}

extend type Mutation {
  stepViewEventCreate(input: StepViewEventCreateInput!): StepViewEvent!
  stepNextEventCreate(input: StepNextEventCreateInput!): StepNextEvent!
}
