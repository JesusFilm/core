input JourneyViewEventCreateInput {
  """
  ID should be unique Event UUID (Provided for optimistic mutation result matching)
  """
  id: ID
  journeyId: ID!
}

extend type Language @key(fields: "id") {
  id: ID! @external
}

type JourneyViewEvent implements Event {
  id: ID!
  visitorId: ID!
  journeyId: ID!
  createdAt: DateTime!
  """
  blockId will be null for journeyViewEvent
  """
  blockId: ID
  """
  stepId will be null for journeyViewEvent
  """
  stepId: ID
  """
  label is the title of the journey
  """
  label: String
  """
  value is the journey languageId
  """
  value: String
  """
  langauge is the language of the journey resolved from the languageId in value
  """
  language: Language
}

extend type Mutation {
  journeyViewEventCreate(input: JourneyViewEventCreateInput!): JourneyViewEvent!
}
