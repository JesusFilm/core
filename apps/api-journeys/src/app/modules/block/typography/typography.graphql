enum TypographyVariant {
  h1
  h2
  h3
  h4
  h5
  h6
  subtitle1
  subtitle2
  body1
  body2
  caption
  overline
}

enum TypographyColor {
  primary
  secondary
  error
}

enum TypographyAlign {
  left
  center
  right
}

type TypographyBlock implements Block {
  id: ID!
  journeyId: ID!
  parentBlockId: ID
  parentOrder: Int
  content: String!
  variant: TypographyVariant
  color: TypographyColor
  customColor: String
  align: TypographyAlign
}

input TypographyBlockCreateInput {
  id: ID
  journeyId: ID!
  parentBlockId: ID!
  content: String!
  variant: TypographyVariant
  color: TypographyColor
  customColor: String
  align: TypographyAlign
}

input TypographyBlockUpdateInput {
  parentBlockId: ID
  content: String
  variant: TypographyVariant
  color: TypographyColor
  customColor: String
  align: TypographyAlign
}

extend type Mutation {
  typographyBlockCreate(input: TypographyBlockCreateInput!): TypographyBlock!
  typographyBlockUpdate(
    id: ID!
    input: TypographyBlockUpdateInput!
    """
    drop this parameter after merging teams
    """
    journeyId: ID
  ): TypographyBlock!
}
