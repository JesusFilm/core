type StepBlock implements Block {
  id: ID!
  journeyId: ID!
  """
  nextBlockId contains the preferred block to navigate to, users will have to
  manually set the next block they want to card to navigate to
  """
  nextBlockId: ID
  """
  locked will be set to true if the user should not be able to manually
  advance to the next step.
  """
  locked: Boolean!
  parentBlockId: ID
  parentOrder: Int
  """
  x is used to position the block horizontally in the journey flow diagram on
  the editor.
  """
  x: Int
  """
  y is used to position the block vertically in the journey flow diagram on
  the editor.
  """
  y: Int
}

input StepBlockCreateInput {
  id: ID
  journeyId: ID!
  nextBlockId: ID
  locked: Boolean
  """
  x is used to position the block horizontally in the journey flow diagram on
  the editor.
  """
  x: Int
  """
  y is used to position the block vertically in the journey flow diagram on
  the editor.
  """
  y: Int
}

input StepBlockUpdateInput {
  nextBlockId: ID
  locked: Boolean
  """
  x is used to position the block horizontally in the journey flow diagram on
  the editor.
  """
  x: Int
  """
  y is used to position the block vertically in the journey flow diagram on
  the editor.
  """
  y: Int
}

input StepBlockPositionUpdateInput {
  id: ID!
  x: Int
  y: Int
}

extend type Mutation {
  stepBlockCreate(input: StepBlockCreateInput!): StepBlock!
  stepBlockUpdate(
    id: ID!
    input: StepBlockUpdateInput!
    """
    drop this parameter after merging teams
    """
    journeyId: ID
  ): StepBlock!
  stepBlockPositionUpdate(
    input: [StepBlockPositionUpdateInput!]!
  ): [StepBlock!]!
}
