type ImageBlock implements Block {
  id: ID!
  journeyId: ID!
  parentBlockId: ID
  parentOrder: Int
  src: String
  width: Int!
  height: Int!
  alt: String!
  """
  blurhash is a compact representation of a placeholder for an image.
  Find a frontend implementation at https://github.com/woltapp/blurhash
  """
  blurhash: String!
}

input ImageBlockCreateInput {
  """
  ID should be unique Response UUID (Provided for optimistic mutation result matching)
  """
  id: ID
  parentBlockId: ID!
  journeyId: ID!
  src: String
  alt: String!
  blurhash: String
  """
  True if the coverBlockId in a parent block should be set to this block's id.
  """
  isCover: Boolean
}

input ImageBlockUpdateInput {
  parentBlockId: ID
  src: String
  alt: String
}

extend type Mutation {
  imageBlockCreate(input: ImageBlockCreateInput!): ImageBlock!
  imageBlockUpdate(
    id: ID!
    journeyId: ID!
    input: ImageBlockUpdateInput!
  ): ImageBlock!
}

extend type Journey {
  primaryImageBlock: ImageBlock
}
