extend type Video @key(fields: "id primaryLanguageId") {
  id: ID! @external
  primaryLanguageId: ID! @external
}

enum VideoBlockSource {
  internal
  youTube
}

type VideoBlock implements Block {
  id: ID!
  journeyId: ID!
  parentBlockId: ID
  parentOrder: Int
  """
  startAt dictates at which point of time the video should start playing
  """
  startAt: Int
  """
  endAt dictates at which point of time the video should end
  """
  endAt: Int
  muted: Boolean
  autoplay: Boolean
  """
  posterBlockId is present if a child block should be used as a poster.
  This child block should not be rendered normally, instead it should be used
  as the video poster. PosterBlock should be of type ImageBlock.
  """
  posterBlockId: ID
  fullsize: Boolean
  """
  internal source videos: video is only populated when videoID and
  videoVariantLanguageId are present
  """
  video: Video
  """
  internal source videos: videoId and videoVariantLanguageId both need to be set
  to select a video.
  For other sources only videoId needs to be set.
  """
  videoId: ID
  """
  internal source videos: videoId and videoVariantLanguageId both need to be set
  to select a video.
  For other sources only videoId needs to be set.
  """
  videoVariantLanguageId: ID
  """
  internal source: videoId, videoVariantLanguageId, and video present
  youTube source: videoId, title, description, and duration present
  """
  source: VideoBlockSource!
  """
  internal source videos: this field is not populated and instead only present
  in the video field.
  For other sources this is automatically populated.
  """
  title: String
  """
  internal source videos: this field is not populated and instead only present
  in the video field
  For other sources this is automatically populated.
  """
  description: String
  """
  internal source videos: this field is not populated and instead only present
  in the video field
  For other sources this is automatically populated.
  """
  image: String
  """
  internal source videos: this field is not populated and instead only present
  in the video field
  For other sources this is automatically populated.
  duration in seconds.
  """
  duration: Int
  """
  action that should be performed when the video ends
  """
  action: Action
}

input VideoBlockCreateInput {
  id: ID
  journeyId: ID!
  parentBlockId: ID!
  """
  startAt dictates at which point of time the video should start playing
  """
  startAt: Int
  """
  endAt dictates at which point of time the video should end
  """
  endAt: Int
  description: String
  muted: Boolean
  autoplay: Boolean
  """
  internal source videos: videoId and videoVariantLanguageId both need to be set
  to select a video.
  For other sources only videoId needs to be set.
  """
  videoId: ID
  """
  internal source videos: videoId and videoVariantLanguageId both need to be set
  to select a video.
  For other sources only videoId needs to be set.
  """
  videoVariantLanguageId: ID
  """
  internal source: videoId and videoVariantLanguageId required
  youTube source: videoId required
  """
  source: VideoBlockSource
  """
  posterBlockId is present if a child block should be used as a poster.
  This child block should not be rendered normally, instead it should be used
  as the video poster. PosterBlock should be of type ImageBlock.
  """
  posterBlockId: ID
  fullsize: Boolean
  """
  True if the coverBlockId in a parent block should be set to this block's id.
  """
  isCover: Boolean
}

input VideoBlockUpdateInput {
  """
  startAt dictates at which point of time the video should start playing
  """
  startAt: Int
  """
  endAt dictates at which point of time the video should end
  """
  endAt: Int
  muted: Boolean
  autoplay: Boolean
  """
  internal source videos: videoId and videoVariantLanguageId both need to be set
  to select a video.
  For other sources only videoId needs to be set.
  """
  videoId: ID
  """
  internal source videos: videoId and videoVariantLanguageId both need to be set
  to select a video.
  For other sources only videoId needs to be set.
  """
  videoVariantLanguageId: ID
  """
  internal source: videoId and videoVariantLanguageId required
  youTube source: videoId required
  """
  source: VideoBlockSource
  """
  posterBlockId is present if a child block should be used as a poster.
  This child block should not be rendered normally, instead it should be used
  as the video poster. PosterBlock should be of type ImageBlock.
  """
  posterBlockId: ID
  fullsize: Boolean
}

extend type Mutation {
  videoBlockCreate(input: VideoBlockCreateInput!): VideoBlock!
  videoBlockUpdate(
    id: ID!
    journeyId: ID!
    input: VideoBlockUpdateInput!
  ): VideoBlock!
}
