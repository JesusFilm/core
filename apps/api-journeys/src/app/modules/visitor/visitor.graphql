type Browser {
  name: String
  version: String
}

enum DeviceType {
  console
  mobile
  tablet
  smarttv
  wearable
  embedded
}

type Device {
  model: String
  type: DeviceType
  vendor: String
}

type OperatingSystem {
  name: String
  version: String
}

"""
These types are a subset provided by the @types/ua-parser-js library.
"""
type UserAgent {
  browser: Browser!
  device: Device!
  os: OperatingSystem!
}

"""
The status of a visitor according to team members interacting with the
visitor admin interface.
"""
enum VisitorStatus {
  star
}

"""
A visitor with attributes connected to a team.
"""
type Visitor @key(fields: "id") {
  id: ID!
  """
  The time when the visitor created their first event on a journey connected
  to the requested team.
  """
  createdAt: DateTime!
  """
  The last time the visitor called the ButtonClickEvent mutation where the url
  is in the format of a recognized chat platform.
  """
  lastChatStartedAt: DateTime
  """
  The user agent of the visitor as poulated by the visitor's user-agent string
  detected in the JourneyViewEventCreate mutation. This field is enriched
  by data from the ua-parser-js library. If this field is empty it is likely
  that the JourneyViewEventCreate mutation was not called by the visitor.
  """
  userAgent: UserAgent
  """
  The country code of the visitor as poulated by visitor ip address detected in
  the JourneyViewEventCreate mutation. This field country code is converted
  from an IP address by the @maxmind/geoip2-node library. If this field is empty
  it is likely that the JourneyViewEventCreate mutation was not called by the
  visitor or that the country was not able to be determined based on the
  visitor IP address.
  """
  countryCode: String
  """
  The name of the visitor as populated by mutation or otherwise via
  SignUpEventSubmissionEventCreate mutation.
  """
  name: String
  """
  The email address of the visitor as populated by mutation or otherwise via
  SignUpEventSubmissionEventCreate mutation.
  """
  email: String
  """
  Status of the visitor as set by any journeys-admin user via the VisitorUpdate
  mutation.
  """
  status: VisitorStatus
  """
  Messenger network of the visitor as set by any journeys-admin user via the
  VisitorUpdate mutation.
  """
  messengerNetwork: String
  """
  Messenger ID of the visitor as set by any journeys-admin user via the
  VisitorUpdate mutation. This could be a phone number, user id or other
  unique identifier provided by the messenger network.
  """
  messengerId: String
  """
  Private notes of the visitor as set by any journeys-admin user via the
  VisitorUpdate mutation.
  """
  notes: String
}

"""
An edge in a connection.
"""
type VisitorEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!
  """
  The item at the end of the edge.
  """
  node: Visitor!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
A list of visitors connected with a team.
"""
type VisitorsConnection {
  """
  A list of edges.
  """
  edges: [VisitorEdge!]!
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

extend type Query {
  """
  A list of visitors that are connected with a specific team.
  """
  visitorsConnection(
    """
    Returns the visitor items related to a specific team.
    """
    teamId: String!
    """
    Returns the first n elements from the list.
    """
    first: Int
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String
  ): VisitorsConnection!
  """
  Get a single visitor
  """
  visitor(id: ID!): Visitor!
}

"""
A list of fields to update a visitor when calling the visitorUpdate mutation
"""
input VisitorUpdateInput {
  """
  The email address of the visitor (will prevent
  SignUpEventSubmissionEventCreate mutation from updating this field
  automatically)
  """
  email: String
  messengerId: String
  messengerNetwork: String
  """
  The name of the visitor (will prevent SignUpEventSubmissionEventCreate
  mutation from updating this field automatically)
  """
  name: String
  """
  Private notes relating to the visitor. This information is never made public
  and only accessible by team members.
  """
  notes: String
  """
  Status of the visitor.
  """
  status: VisitorStatus
}

extend type Mutation {
  """
  Update a visitor
  """
  visitorUpdate(id: ID!, input: VisitorUpdateInput!): Visitor!
}
