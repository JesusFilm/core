enum VideoResponseStateEnum {
  PLAYING @deprecated(reason: "use event instead of response")
  PAUSED @deprecated(reason: "use event instead of response")
  FINISHED @deprecated(reason: "use event instead of response")
}

input VideoResponseCreateInput {
  """
  ID should be unique Response UUID (Provided for optimistic mutation result matching)
  """
  id: ID @deprecated(reason: "use event instead of response")
  blockId: ID @deprecated(reason: "use event instead of response")
  state: VideoResponseStateEnum
    @deprecated(reason: "use event instead of response")
  position: Float @deprecated(reason: "use event instead of response")
}

type VideoResponse implements Response {
  id: ID! @deprecated(reason: "use event instead of response")
  userId: ID! @deprecated(reason: "use event instead of response")
  state: VideoResponseStateEnum!
    @deprecated(reason: "use event instead of response")
  position: Int @deprecated(reason: "use event instead of response")
  block: VideoBlock @deprecated(reason: "use event instead of response")
}

extend type Mutation {
  videoResponseCreate(input: VideoResponseCreateInput!): VideoResponse!
}
