"""
A visitor with attributes connected to a team.
"""
type VisitorTeam @key(fields: "id") {
  id: ID!
  teamId: ID!
  userId: ID!
  createdAt: String!
}

"""
An edge in a connection.
"""
type VisitorTeamEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!
  """
  The item at the end of the edge.
  """
  node: VisitorTeam!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
A list of visitors connected with a team.
"""
type VisitorTeamsConnection {
  """
  A list of edges.
  """
  edges: [VisitorTeamEdge!]!
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

extend type Query {
  """
  A list of visitors that are connected with a specific team.
  """
  visitorTeamsConnection(
    """
    Returns the visitor items related to a specific team.
    """
    teamId: String!
    """
    Returns the first n elements from the list.
    """
    first: Int
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String
  ): VisitorTeamsConnection!
}
