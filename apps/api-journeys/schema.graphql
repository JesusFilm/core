interface Block {
  id: ID!
  parentBlockId: ID
}

type Journey @key(fields: "id") {
  id: ID!
  published: Boolean!
  title: String!
  blocks: [Block!]
}

extend type Mutation {
  journeyCreate(title: String!): Journey!
  journeyPublish(id: ID!): Journey
}

extend type Query {
  journeys: [Journey!]!
  journey(id: ID!): Journey
}

type RadioOptionBlock implements Block {
  id: ID!
  parentBlockId: ID
  label: String!
  image: String
}

type RadioQuestionBlock implements Block {
  id: ID!
  parentBlockId: ID
  label: String!
  description: String!
  variant: RadioQuestionVariant
}

enum RadioQuestionVariant {
  LIGHT
  DARK
}

type StepBlock implements Block {
  id: ID!
  parentBlockId: ID
}

type VideoBlock implements Block {
  id: ID!
  parentBlockId: ID
  src: String!
  title: String!
  description: String
  provider: VideoProviderEnum
}

enum VideoProviderEnum {
  YOUTUBE
  VIMEO
  ARCLIGHT
}
