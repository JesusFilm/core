interface Action {
  gtmEventName: String
}

interface Block {
  id: ID!
  parentBlockId: ID
}

type Journey @key(fields: "id") {
  id: ID!
  published: Boolean!
  title: String!
  locale: String!
  blocks: [Block!]
}

type LinkAction implements Action {
  gtmEventName: String
  url: String!
  target: String
}

extend type Mutation {
  journeyCreate(title: String!, locale: String): Journey!
  journeyPublish(id: ID!): Journey
}

type NavigateAction implements Action {
  gtmEventName: String
  blockId: String!
}

type NavigateToJourneyAction implements Action {
  gtmEventName: String
  journeyId: String!
}

extend type Query {
  journeys: [Journey!]!
  journey(id: ID!): Journey
}

type RadioOptionBlock implements Block {
  id: ID!
  parentBlockId: ID
  label: String!
  action: Action
}

type RadioQuestionBlock implements Block {
  id: ID!
  parentBlockId: ID
  label: String!
  description: String
  variant: RadioQuestionVariant
}

enum RadioQuestionVariant {
  LIGHT
  DARK
}

type StepBlock implements Block {
  id: ID!
  parentBlockId: ID
}

enum TypographyAlign {
  LEFT
  CENTER
  RIGHT
}

type TypographyBlock implements Block {
  id: ID!
  parentBlockId: ID
  content: String!
  variant: TypographyVariant
  color: TypographyColor
  align: TypographyAlign
}

enum TypographyColor {
  PRIMARY
  SECONDARY
  ERROR
  WARNING
  INFO
  SUCCESS
}

enum TypographyVariant {
  HEADING_1
  HEADING_2
  HEADING_3
  HEADING_4
  HEADING_5
  HEADING_6
  SUBTITLE_1
  SUBTITLE_2
  BODY_1
  BODY_2
  BUTTON
  CAPTION
  OVERLINE
}

type VideoBlock implements Block {
  id: ID!
  parentBlockId: ID
  src: String!
  title: String!
  description: String
  provider: VideoProviderEnum!
}

enum VideoProviderEnum {
  YOUTUBE
  VIMEO
  ARCLIGHT
}
