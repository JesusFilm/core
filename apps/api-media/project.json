{
  "name": "api-media",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/api-media/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nx/webpack:webpack",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/api-media",
        "main": "apps/api-media/src/main.ts",
        "tsConfig": "apps/api-media/tsconfig.app.json",
        "generatePackageJson": true,
        "assets": [
          "apps/api-media/src/assets",
          {
            "glob": "**/*.graphql",
            "input": "apps/api-media/src/app/",
            "output": "./assets"
          },
          {
            "glob": "**/*.graphql",
            "input": "libs/nest/common/src/lib/TranslationModule/",
            "output": "./assets"
          }
        ],
        "compiler": "tsc",
        "target": "node",
        "webpackConfig": "apps/api-media/webpack.config.js"
      },
      "configurations": {
        "production": {
          "optimization": true,
          "extractLicenses": true,
          "inspect": false,
          "fileReplacements": [
            {
              "replace": "apps/api-media/src/environments/environment.ts",
              "with": "apps/api-media/src/environments/environment.prod.ts"
            }
          ]
        }
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "options": {
        "buildTarget": "api-media:build",
        "inspect": false
      }
    },
    "watcher": {
      "executor": "nx:run-commands",
      "options": {
        "command": "bun run ts-node tools/scripts/generate-typings.ts api-media --transpileOnly"
      }
    },
    "lint": {
      "executor": "nx:run-commands",
      "options": {
        "command": "bunx @biomejs/biome check  --diagnostic-level=warn",
        "cwd": "apps/api-media"
      }
    },
    "lint:fix": {
      "executor": "nx:run-commands",
      "options": {
        "command": "bunx @biomejs/biome check --write",
        "cwd": "apps/api-media"
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/apps/api-media"],
      "options": {
        "jestConfig": "apps/api-media/jest.config.ts"
      }
    },
    "generate-graphql": {
      "executor": "nx:run-commands",
      "options": {
        "command": "rover subgraph introspect http://localhost:4005/graphql > apps/api-media/schema.graphql"
      }
    },
    "subgraph-check": {
      "executor": "nx:run-commands",
      "options": {
        "command": "rover subgraph check API-GATEWAY-0zuda@current --name api-media --schema apps/api-media/schema.graphql"
      }
    },
    "fetch-secrets": {
      "executor": "nx:run-commands",
      "options": {
        "command": "DOPPLER_TOKEN=$DOPPLER_API_MEDIA_TOKEN doppler secrets download --no-file --format=env-no-quotes --project api-media > apps/api-media/.env"
      }
    },
    "prisma-generate": {
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "commands": [
          "bunx prisma generate --schema apps/api-media/db/schema.prisma"
        ]
      }
    },
    "prisma-migrate": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "bash -c 'bunx prisma migrate dev --schema apps/api-media/db/schema.prisma --name `date +\"%Y%m%d%H%M%S\"`'"
        ]
      },
      "configurations": {
        "production": {
          "commands": [
            "bunx prisma migrate deploy --schema apps/api-media/db/schema.prisma"
          ]
        }
      }
    },
    "prisma-reset": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "bunx prisma migrate reset --schema apps/api-media/db/schema.prisma --force"
        ]
      }
    },
    "prisma-studio": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "bunx prisma studio --schema apps/api-media/db/schema.prisma"
        ]
      }
    },
    "prisma-validate": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "bunx prisma validate --schema apps/api-media/db/schema.prisma"
        ]
      }
    },
    "type-check": {
      "executor": "nx:run-commands",
      "options": {
        "command": "bunx tsc -b apps/api-media/tsconfig.json"
      }
    },
    "codecov": {
      "executor": "nx:run-commands",
      "options": {
        "command": "codecov -f coverage/apps/api-media/cobertura-coverage.xml -F apps.api-media"
      }
    }
  },
  "tags": []
}
