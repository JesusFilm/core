extend type Language @key(fields: "id") {
  id: ID! @external
}

enum IdType {
  databaseId
  slug
}

enum VideoType {
  episode
  standalone
  playlist
}

type Video @key(fields: "id primaryLanguageId") {
  id: ID!
  primaryLanguageId: ID!
  title(languageId: ID, primary: Boolean): [Translation!]!
  snippet(languageId: ID, primary: Boolean): [Translation!]!
  description(languageId: ID, primary: Boolean): [Translation!]!
  studyQuestions(languageId: ID, primary: Boolean): [Translation!]!
  image: String
  variantLanguages: [Language!]!
  seoTitle: String
  type: VideoType!
  """
  Videos containing episodes are considered playlists
  """
  episodeIds: [ID!]
  episodes: [Video!]
}

input VideosFilter {
  availableVariantLanguageIds: [ID!]
  title: String
  tagId: String
  includePlaylists: Boolean
  includePlaylistVideos: Boolean
  onlyPlaylists: Boolean
}

extend type Query {
  videos(where: VideosFilter, offset: Int, limit: Int): [Video!]!
  video(id: ID!, idType: IdType): Video!
}
