extend type Language @key(fields: "id") {
  id: ID! @external
}

enum IdType {
  databaseId
  slug
}

enum VideoType {
  episode
  standalone
  playlist
}

type Video @key(fields: "id primaryLanguageId") {
  id: ID!
  type: VideoType!
  primaryLanguageId: ID!
  title(languageId: ID, primary: Boolean): [Translation!]!
  seoTitle(languageId: ID, primary: Boolean): [Translation!]!
  snippet(languageId: ID, primary: Boolean): [Translation!]!
  description(languageId: ID, primary: Boolean): [Translation!]!
  studyQuestions(languageId: ID, primary: Boolean): [Translation!]!
  image: String
  imageAlt(languageId: ID, primary: Boolean): [Translation!]!
  variantLanguages: [Language!]!
  permalinks: [Translation!]!
  noIndex: Boolean
  """
  Episodes are child videos, currently only found in a playlist type
  """
  episodeIds: [ID!]!
  episodes: [Video!]!
}

input VideosFilter {
  availableVariantLanguageIds: [ID!]
  title: String
  tagId: String
  types: [VideoType!]
}

extend type Query {
  episodes(
    playlistId: ID!
    idType: IdType
    where: VideosFilter
    offset: Int
    limit: Int
  ): [Video!]!
  videos(where: VideosFilter, offset: Int, limit: Int): [Video!]!
  video(id: ID!, idType: IdType): Video!
}
