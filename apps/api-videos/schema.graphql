extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.7", import: ["@extends", "@external", "@key", "@shareable"])

type BibleBook {
  name(languageId: ID, primary: Boolean): [BibleBookName!]!
  osisId: String!
  alternateName: String
  paratextAbbreviation: String!
  isNewTestament: Boolean!
  order: Int!
}

type BibleBookName {
  value: String!
  primary: Boolean!
  language: Language!
}

type BibleCitation {
  osisId: String!
  bibleBook: BibleBook!
  chapterStart: Int!
  chapterEnd: Int
  verseStart: Int!
  verseEnd: Int
}

enum IdType {
  databaseId
  slug
}

type Keyword {
  id: ID!
  value: String!
  language: Language!
}

type Language
  @key(fields: "id")
  @extends
{
  id: ID! @external
}

type LanguageWithSlug {
  language: Language!
  slug: String!
}

type Query {
  video(id: ID!, idType: IdType = databaseId): Video!
  videos(where: VideosFilter, offset: Int, limit: Int): [Video!]!
}

type Video
  @key(fields: "id")
  @shareable
{
  bibleCitations: [BibleCitation!]!
  keywords(languageId: ID): [Keyword!]!
  id: ID!
  label: VideoLabel!
  primaryLanguageId: ID!
  title(languageId: ID, primary: Boolean): [VideoTitle!]!
  snippet(languageId: ID, primary: Boolean): [VideoSnippet!]!
  description(languageId: ID, primary: Boolean): [VideoDescription!]!
  studyQuestions(languageId: ID, primary: Boolean): [VideoStudyQuestion!]!
  image: String
  imageAlt(languageId: ID, primary: Boolean): [VideoImageAlt!]!
  variantLanguages: [Language!]!
  variantLanguagesCount: Int!

  """slug is a permanent link to the video."""
  slug: String!
  noIndex: Boolean
  children: [Video!]!

  """the number value of the amount of children on a video"""
  childrenCount: Int!
  variantLanguagesWithSlug: [LanguageWithSlug!]!
  subtitles(languageId: ID, primary: Boolean, edition: String): [VideoSubtitle!]!
  variant(languageId: ID): VideoVariant
}

type VideoDescription {
  value: String!
  primary: Boolean!
  language: Language!
}

type VideoImageAlt {
  value: String!
  primary: Boolean!
  language: Language!
}

enum VideoLabel {
  collection
  episode
  featureFilm
  segment
  series
  shortFilm
  trailer
  behindTheScenes
}

type VideoSnippet {
  value: String!
  primary: Boolean!
  language: Language!
}

type VideoStudyQuestion {
  value: String!
  primary: Boolean!
  language: Language!
}

type VideoSubtitle {
  id: ID!
  languageId: ID!
  edition: String!
  vttSrc: String
  srtSrc: String
}

type VideoTitle {
  value: String!
  primary: Boolean!
  language: Language!
}

type VideoVariant {
  id: ID!
  hls: String
  downloads: [VideoVariantDownload!]!
  duration: Int!
  language: Language!
  subtitle(languageId: ID, primary: Boolean): [VideoVariantSubtitle!]!
  subtitleCount: Int!

  """slug is a permanent link to the video variant."""
  slug: String!
}

type VideoVariantDownload {
  quality: VideoVariantDownloadQuality!
  size: Float!
  url: String!
}

enum VideoVariantDownloadQuality {
  low
  high
}

type VideoVariantSubtitle {
  value: String!
  primary: Boolean!
  language: Language!
}

input VideosFilter {
  availableVariantLanguageIds: [ID!]
  title: String
  labels: [VideoLabel!]
  ids: [ID!]
  subtitleLanguageIds: [ID!]
}