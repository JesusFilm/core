directive @key(fields: _FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @external(reason: String) on OBJECT | FIELD_DEFINITION

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @extends on OBJECT | INTERFACE

scalar DateTime

scalar Object

type Batch
  @key(fields: "id")
{
  id: ID!
  name: String!
  status: BatchStatus
  totalTasks: Int
  completedTasks: Int
  failedTasks: Int
  progress: Float
  batchTasks: [BatchTask]
  createdAt: DateTime!
  updatedAt: DateTime
}

enum BatchStatus {
  pending
  processing
  completed
  failed
}

type BatchTask
  @key(fields: "id")
{
  id: ID!
  batchId: String!
  type: String
  task: Object
  progress: Int
  error: String
  status: BatchTaskStatus
  createdAt: DateTime!
  updatedAt: DateTime
}

enum BatchTaskStatus {
  pending
  processing
  completed
  failed
}

input BatchFilter {
  ids: [ID!]
  name: String
  status: BatchStatus
  limit: Int
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
}

extend type Query {
  batches(where: BatchFilter): [Batch]
  batch(id: ID!): Batch!
  channels(where: ChannelFilter): [Channel!]
  channel(id: ID!): Channel!
  nexuses(where: NexusFilter): [Nexus!]!
  nexus(id: ID!): Nexus!
  resources(where: ResourceFilter): [Resource!]
  resource(id: ID!): Resource!
}

type Channel
  @key(fields: "id")
{
  id: ID!
  name: String!
  platform: String
  connected: Boolean
  title: String
  description: String
  youtubeId: String
  imageUrl: String
  createdAt: DateTime!
}

enum ChannelStatus {
  created
  deleted
  published
}

input ChannelCreateInput {
  name: String!
  platform: String!
}

input ChannelUpdateInput {
  name: String
  platform: String
}

input ChannelFilter {
  ids: [ID!]
  name: String
  limit: Int
  connected: Boolean
  status: ChannelStatus
}

input ConnectYoutubeChannelInput {
  channelId: String!
  accessToken: String!
}

extend type Mutation {
  channelCreate(input: ChannelCreateInput!): Channel!
  channelUpdate(id: ID!, input: ChannelUpdateInput!): Channel!
  channelDelete(id: ID!): Channel!
  channelConnect(input: ConnectYoutubeChannelInput!): Channel!
  nexusCreate(input: NexusCreateInput!): Nexus!
  nexusUpdate(id: ID!, input: NexusUpdateInput!): Nexus!
  nexusDelete(id: ID!): Boolean!
  resourceCreate(input: ResourceCreateInput!): Resource!
  resourceUpdate(id: ID!, input: ResourceUpdateInput!): Resource!
  resourceDelete(id: ID!): Resource!
  resourceFromTemplate(input: ResourceFromTemplateInput!): [Resource]
  uploadToYoutube(channelId: String!, resourceId: String!): Boolean
  resourceFromArray(input: ResourceFromArrayInput!): [Resource]
}

type Nexus
  @key(fields: "id")
{
  id: ID!
  name: String!
  description: String
  createdAt: DateTime!
  deletedAt: DateTime
  status: NexusStatus!
}

enum NexusStatus {
  deleted
  published
}

input NexusCreateInput {
  name: String!
  description: String
}

input NexusUpdateInput {
  name: String
  description: String
}

input NexusFilter {
  ids: [ID!]
  name: String
  description: String
  createdAt: DateTime
  limit: Int
  orderByRecent: Boolean
}

scalar Upload

type Resource
  @key(fields: "id")
{
  id: ID!
  name: String!
  category: String
  spokenLanguage: String
  customThumbnail: String
  playlistId: String
  isMadeForKids: Boolean
  mediaComponentId: String
  notifySubscribers: Boolean
  status: ResourceStatus
  privacy: PrivacyStatus
  resourceLocalizations: [ResourceLocalization]
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
}

type ResourceLocalization
  @key(fields: "id")
{
  id: ID!
  resourceId: String
  title: String
  description: String
  keywords: String
  language: String
}

enum PrivacyStatus {
  public
  unlisted
  private
}

enum ResourceStatus {
  created
  deleted
  published
  processing
  error
  uploaded
}

input ResourceCreateInput {
  name: String!
}

input ResourceUpdateInput {
  name: String
}

input ResourceFromGoogleDriveInput {
  fileIds: [String!]!
  authCode: String!
}

input ResourceFilter {
  ids: [ID!]
  name: String
  status: ResourceStatus
  limit: Int
}

input ResourceFromTemplateInput {
  accessToken: String!
  spreadsheetId: String!
  drivefolderId: String!
}

input BatchJobBatch {
  id: ID!
  batchName: String!
}

input BatchJobResource {
  resource: ID!
  channel: ID!
}

input BatchJobInput {
  batch: BatchJobBatch!
  resources: [BatchJobResource]!
}

input ResourceFromArrayInput {
  accessToken: String!
  spreadsheetData: [SpreadsheetRowInput!]!
}

input SpreadsheetRowInput {
  channel: String
  filename: String
  title: String
  description: String
  customThumbnail: String
  keywords: String
  category: String
  privacy: String
  spokenLanguage: String
  videoId: String
  captionFile: String
  audioTrackFile: String
  language: String
  captionLanguage: String
  notifySubscribers: String
  playlistId: String
  isMadeForKids: String
  mediaComponentId: String
  textLanguage: String
}

scalar _FieldSet

scalar _Any

type _Service {
  sdl: String
}

union _Entity = Batch | BatchTask | Channel | Nexus | Resource | ResourceLocalization
