generator client {
    provider = "prisma-client-js"
    output   = env("PRISMA_LOCATION")
}

datasource db {
    provider = "postgresql"
    url      = env("PG_DATABASE_URL")
}

model Nexus {
    id          String      @id @default(uuid())
    name        String
    description String?
    createdAt   DateTime    @default(now())
    deletedAt   DateTime?
    status      NexusStatus @default(published)
    userNexuses UserNexus[]
    channels    Channel[]
    resources   Resource[]
}

enum NexusStatus {
    deleted
    published
}

model UserNexus {
    id      String @id @default(uuid())
    userId  String
    nexusId String
    nexus   Nexus  @relation(fields: [nexusId], references: [id])
    role    String
}

model Channel {
    id        String          @id @default(uuid())
    nexusId   String
    name      String
    platform  String
    connected Boolean         @default(false)
    nexus     Nexus           @relation(fields: [nexusId], references: [id])
    youtube   ChannelYoutube?
    status    NexusStatus     @default(published)
    createdAt DateTime        @default(now())
    deletedAt DateTime?
}

model Resource {
    id      String  @id @default(uuid())
    nexusId String
    name    String
    refLink String?
    videoId String?
    nexus   Nexus   @relation(fields: [nexusId], references: [id])
}

model ChannelYoutube {
    id           String  @id @default(uuid())
    channelId    String  @unique
    channel      Channel @relation(fields: [channelId], references: [id])
    title        String
    description  String
    youtubeId    String
    imageUrl     String
    refreshToken String
}
