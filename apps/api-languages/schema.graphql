extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.6", import: ["@key", "@shareable"])

type Country
  @key(fields: "id")
{
  id: ID!
  name(languageId: ID, primary: Boolean): [Translation!]!
  population: Int
  continent(languageId: ID, primary: Boolean): [Translation!]!
  languages: [Language!]!
  latitude: Float
  longitude: Float
  flagPngSrc: String
  flagWebpSrc: String
}

type Query {
  countries: [Country!]!
  country(id: ID!): Country!
  languages(offset: Int, limit: Int, where: LanguagesFilter): [Language!]! @cacheControl(maxAge: 86400)
  language(id: ID!, idType: LanguageIdType): Language @cacheControl(maxAge: 86400)
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
}

type Language
  @key(fields: "id")
{
  id: ID!
  bcp47: String
  iso3: String
  name(languageId: ID, primary: Boolean): [Translation!]!
}

enum LanguageIdType {
  databaseId
  bcp47
}

input LanguagesFilter {
  ids: [ID!]
}

type Query {
  language(id: ID!, idType: LanguageIdType = databaseId): Language
  languages(offset: Int, limit: Int, where: LanguagesFilter): [Language!]!
}

type Translation
  @shareable
{
  primary: Boolean!
  value: String!
  language: Language!
}
