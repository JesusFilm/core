directive @key(fields: _FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @external(reason: String) on OBJECT | FIELD_DEFINITION

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @extends on OBJECT | INTERFACE

enum IdType {
  databaseId
  slug
}

type Country
  @key(fields: "id")
{
  id: ID!
  name(languageId: ID, primary: Boolean): [Translation!]!
  population: Int!
  continent(languageId: ID, primary: Boolean): [Translation!]!

  """
  slug is a permanent link to the country. It should only be appended, not edited or deleted
  """
  slug(languageId: ID, primary: Boolean): [Translation!]!
  languages: [Language!]!
  latitude: Float!
  longitude: Float!
  image: String
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
}

extend type Query {
  countries: [Country!]!
  country(id: ID!, idType: IdType): Country!
  languages(offset: Int, limit: Int): [Language!]!
  language(id: ID!, idType: LanguageIdType): Language
}

type Language
  @key(fields: "id")
{
  id: ID!
  bcp47: String
  iso3: String
  name(languageId: ID, primary: Boolean): [Translation!]!
}

enum LanguageIdType {
  databaseId
  bcp47
}

type Translation {
  value: String!
  language: Language!
  primary: Boolean!
}

scalar _FieldSet

scalar _Any

type _Service {
  sdl: String
}

union _Entity = Country | Language