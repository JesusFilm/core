type Country {
  continent(languageId: ID, primary: Boolean): [Translation!]!
  flagPngSrc: String
  flagWebpSrc: String
  id: ID!
  languages: [Language!]!
  latitude: Float
  longitude: Float
  name(languageId: ID, primary: Boolean): [Translation!]!
  population: Int
}

type Language {
  bcp47: String
  id: ID!
  iso3: String
  name(languageId: ID, primary: Boolean): [Translation!]!
}

enum LanguageIdType {
  bcp47
  databaseId
}

input LanguagesFilter {
  ids: [ID!]
}

type Query {
  countries: [Country!]!
  country(id: ID!): Country
  language(id: ID!, idType: LanguageIdType = databaseId): Language
  languages(limit: Int, offset: Int, where: LanguagesFilter): [Language!]!
}

type Translation {
  language: Language!
  primary: Boolean
  value: String!
}