name: API push build
on:
  push:
    branches:
      - stage
permissions:
  contents: read
  checks: write
jobs:
  affected:
    runs-on: [self-hosted, blacksmith-2vcpu-ubuntu-2204]
    strategy:
      matrix:
        node-version: [22]
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: useblacksmith/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get Node Version
        id: node-version
        run: echo "version=$(node -v)" >> $GITHUB_OUTPUT
      - name: Mount NPM Cache
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-${{ steps.node-version.outputs.version }}-npm-cache
          path: ~/.npm
      - name: Mount node_modules
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-${{ steps.node-version.outputs.version }}-node-modules
          path: ./node_modules
      - name: NPM Install
        run: npm install --silent
      - uses: nrwl/nx-set-shas@v4
      - id: set-matrix
        name: set matrix app to affected array
        run: |
          echo "matrix=$(npx ts-node tools/scripts/affected-apps.ts --projects apis/*)" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
  api-analytics:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-analytics')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@stage
    with:
      name: api-analytics
      env: stage
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-analytics.stage.internal:4008/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_STAGE_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  api-journeys:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-journeys')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@stage
    with:
      name: api-journeys
      env: stage
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-journeys.stage.internal:4001/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_STAGE_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  api-journeys-modern:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-journeys-modern')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@stage
    with:
      name: api-journeys-modern
      env: stage
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-journeys-modern.stage.internal:4004/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_STAGE_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  api-users:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-users')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@stage
    with:
      name: api-users
      env: stage
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-users.stage.internal:4002/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_STAGE_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  api-languages:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-languages')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@stage
    with:
      name: api-languages
      env: stage
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-languages.stage.internal:4003/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_STAGE_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  api-media:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-media')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@stage
    with:
      name: api-media
      env: stage
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-media.stage.internal:4005/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_STAGE_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

  api-gateway:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-gateway')
    uses: JesusFilm/core/.github/workflows/api-gateway-stage-worker.yml@stage
    secrets:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
