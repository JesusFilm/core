name: Main
on:
  push:
    branches: [main]
  pull_request:
    branches: [main, feature/*]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch other branches
        if: ${{ github.event_name == 'pull_request' }}
        run: git fetch --no-tags --prune --depth=5 origin $GITHUB_BASE_REF
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-
      - name: NPM Install
        run: npm install --silent
      - name: Codegen
        uses: mansagroup/nrwl-nx-action@v2
        with:
          targets: codegen
          all: true
      - name: lint and typecheck
        uses: mansagroup/nrwl-nx-action@v2
        with:
          targets: lint,type-check
      - name: Prettier
        run: npx prettier --check .
      - name: lint commit messages
        run: npx commitlint --from 8f46c56 # earliest good commit to main
      - name: Check for file changes due to codegen
        run: ./tools/scripts/check-git-status.sh
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch other branches
        if: ${{ github.event_name == 'pull_request' }}
        run: git fetch --no-tags --prune --depth=5 origin $GITHUB_BASE_REF
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-
      - name: NPM Install
        run: npm install --silent
      - uses: mansagroup/nrwl-nx-action@v2
        env:
          NEXT_PUBLIC_FIREBASE_CONFIG_JSON: ${{ secrets.NEXT_PUBLIC_FIREBASE_CONFIG_JSON }}
          COOKIE_SECRET_CURRENT: ${{ secrets.COOKIE_SECRET_CURRENT }}
        with:
          targets: generate,build
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch other branches
        if: ${{ github.event_name == 'pull_request' }}
        run: git fetch --no-tags --prune --depth=5 origin $GITHUB_BASE_REF
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-
      - name: NPM Install
        run: npm install --silent
      - uses: mansagroup/nrwl-nx-action@v2
        with:
          targets: generate,test
          args: --ci
  visual-test:
    needs: [lint, build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch other branches
        if: ${{ github.event_name == 'pull_request' }}
        run: git fetch --no-tags --prune --depth=5 origin $GITHUB_BASE_REF
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-
      - name: NPM Install
        run: npm install --silent
      - name: nx Install
        run: npm install -g nx --silent
      - name: Get affected apps (PR only)
        id: affected-apps
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "::set-output name=apps::$(nx affected:apps --plain --base=origin/main --head=HEAD)"
      - name: Get affected libs (PR only)
        id: affected-libs
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "::set-output name=libs::$(nx affected:libs --plain --base=origin/main --head=HEAD)"
      - name: Build Stories
        id: build-storybook
        env:
          NX_AFFECTED_APPS: ${{ steps.affected-apps.outputs.apps }}
          NX_AFFECTED_LIBS: ${{ steps.affected-libs.outputs.libs }}
        uses: mansagroup/nrwl-nx-action@v2
        with:
          targets: build-storybook
      - name: Check for frontend changes
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'dist/storybook/shared-storybook'
        #ðŸ‘‡ Adds Chromatic as a step in the workflow
      - name: Run VR tests
        if: ${{ steps.check_files.outputs.files_exists == 'true' }}
        uses: chromaui/action@v1
        # Options required for Chromatic's GitHub Action
        # https://www.chromatic.com/docs/github-actions#available-options
        with:
          #ðŸ‘‡ Chromatic projectToken, see https://storybook.js.org/tutorials/intro-to-storybook/react/en/deploy/ to obtain it
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}
          storybookBuildDir: 'dist/storybook/shared-storybook'
          exitOnceUploaded: true,
          autoAcceptChanges: 'main'
          # Keep unaffected stories in PRs, delete stories in main
          preserveMissing: ${{ github.event_name == 'pull_request' }}
