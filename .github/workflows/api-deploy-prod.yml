name: API push build
on:
  push:
    branches:
      - main
permissions:
  contents: read
  checks: write
jobs:
  affected:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    strategy:
      matrix:
        node-version: [22]
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
      PNPM_STORE_PATH: $HOME/.pnpm-store
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Mount pnpm store (stickydisk)
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-pnpm-store-${{ runner.os }}
          path: $HOME/.pnpm-store
      - name: Configure pnpm store-dir
        run: pnpm config set store-dir $HOME/.pnpm-store
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --silent
      - uses: nrwl/nx-set-shas@v4
      - id: set-matrix
        name: set matrix app to affected array
        run: |
          echo "matrix=$(pnpm exec ts-node tools/scripts/affected-apps.ts --projects apis/*)" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
  api-analytics:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-analytics')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@main
    with:
      name: api-analytics
      env: prod
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-analytics.service.internal:4008/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_PROD_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  api-journeys:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-journeys')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@main
    with:
      name: api-journeys
      env: prod
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-journeys.service.internal:4001/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_PROD_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  api-journeys-modern:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-journeys-modern')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@main
    with:
      name: api-journeys-modern
      env: prod
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-journeys-modern.service.internal:4004/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_PROD_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  api-users:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-users')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@main
    with:
      name: api-users
      env: prod
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-users.service.internal:4002/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_PROD_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  api-languages:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-languages')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@main
    with:
      name: api-languages
      env: prod
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-languages.service.internal:4003/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_PROD_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  api-media:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-media')
    uses: JesusFilm/core/.github/workflows/api-deploy-worker.yml@main
    with:
      name: api-media
      env: prod
      branch: ${{ github.ref_name }}
      endpoint_url: http://api-media.service.internal:4005/graphql
    secrets:
      HIVE_TOKEN: ${{ secrets.HIVE_PROD_READ_WRITE_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
      AWS_NETWORK_CONFIG: ${{ secrets.AWS_NETWORK_CONFIG }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

  api-gateway:
    needs: affected
    if: contains(needs.affected.outputs.matrix, 'api-gateway')
    uses: JesusFilm/core/.github/workflows/api-gateway-prod-worker.yml@main
    secrets:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      JFP_AWS_ACCESS_KEY_ID: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
      JFP_AWS_SECRET_ACCESS_KEY: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
