name: API Deployment

on:
  workflow_call:
    secrets:
      AWS_DEFAULT_REGION:
        required: true
      JFP_AWS_ACCESS_KEY_ID:
        required: true
      JFP_AWS_SECRET_ACCESS_KEY:
        required: true
permissions:
  contents: read

jobs:
  build-and-deploy:
    env:
      IMAGE_TAG: ${{ github.sha }}
    runs-on: blacksmith-2vcpu-ubuntu-2204
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
      #ECS Deployment
      - name: Configure ECS AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.JFP_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.JFP_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr-ecs
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image to Amazon ECR
        id: build-image-ecs
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apis/api-gateway/Dockerfile
          push: true
          tags: |
            ${{ steps.login-ecr-ecs.outputs.registry }}/jfp-api-gateway-stage:${{ env.IMAGE_TAG }}
            ${{ steps.login-ecr-ecs.outputs.registry }}/jfp-api-gateway-stage:latest
          build-args: |
            SERVICE_VERSION=${{ env.IMAGE_TAG }}

      - name: Set image output
        run: |
          echo "image=${{ steps.login-ecr-ecs.outputs.registry }}/jfp-api-gateway-stage:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: Restart task definition
        run: |
          aws ecs update-service --force-new-deployment --service api-gateway-stage-service --cluster jfp-ecs-cluster-stage
