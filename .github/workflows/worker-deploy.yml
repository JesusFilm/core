name: Worker Deploy

on:
  push:
    branches: [main, stage]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  affected:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    strategy:
      matrix:
        node-version: [22]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: useblacksmith/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install pnpm
        run: |
          export PNPM_HOME="$HOME/.pnpm"
          export PATH="$PNPM_HOME:$PATH"
          curl -fsSL https://get.pnpm.io/install.sh | sh -s -- --version 9.0.0
          echo "PNPM_HOME=$PNPM_HOME" >> $GITHUB_ENV
          echo "$PNPM_HOME" >> $GITHUB_PATH
      - name: Configure pnpm store
        run: pnpm config set store-dir ~/.pnpm-store
      - name: Get Node Version
        id: node-version
        run: echo "version=$(node -v)" >> $GITHUB_OUTPUT
      - name: Mount pnpm store
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-${{ steps.node-version.outputs.version }}-pnpm-store
          path: ~/.pnpm-store
      - name: Install dependencies
        run: pnpm install --silent
      - uses: nrwl/nx-set-shas@v4
      - id: set-matrix
        name: set matrix worker to affected array
        run: |
          echo "matrix=$(pnpm ts-node tools/scripts/deploy-apps.ts --projects workers/*)" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  deploy-stage:
    name: Deploy Stage
    needs: affected
    if: |
      needs.affected.outputs.matrix != '[]' &&
      needs.affected.outputs.matrix != '' &&
      github.ref == 'refs/heads/stage'
    strategy:
      fail-fast: false
      matrix:
        app: ${{fromJson(needs.affected.outputs.matrix)}}
        github-ref-name: ['${{ github.ref_name }}']
        node-version: [22]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: useblacksmith/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install pnpm
        run: |
          export PNPM_HOME="$HOME/.pnpm"
          export PATH="$PNPM_HOME:$PATH"
          curl -fsSL https://get.pnpm.io/install.sh | sh -s -- --version 9.0.0
          echo "PNPM_HOME=$PNPM_HOME" >> $GITHUB_ENV
          echo "$PNPM_HOME" >> $GITHUB_PATH
      - name: Configure pnpm store
        run: pnpm config set store-dir ~/.pnpm-store
      - name: Get Node Version
        id: node-version
        run: echo "version=$(node -v)" >> $GITHUB_OUTPUT
      - name: Mount pnpm store
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-${{ steps.node-version.outputs.version }}-pnpm-store
          path: ~/.pnpm-store
      - name: Install dependencies
        run: pnpm install --silent
      - uses: nrwl/nx-set-shas@v4
      - name: worker deployment
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          GIT_COMMIT_SHA: ${{ github.sha }}
        run: pnpm exec nx run-many --target=deploy --projects=${{ matrix.app }}

  deploy-production:
    name: Deploy Production
    needs: affected
    if: |
      needs.affected.outputs.matrix != '[]' &&
      needs.affected.outputs.matrix != '' &&
      github.ref == 'refs/heads/main'
    strategy:
      fail-fast: false
      matrix:
        app: ${{fromJson(needs.affected.outputs.matrix)}}
        github-ref-name: ['${{ github.ref_name }}']
        node-version: [22]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: useblacksmith/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install pnpm
        run: |
          export PNPM_HOME="$HOME/.pnpm"
          export PATH="$PNPM_HOME:$PATH"
          curl -fsSL https://get.pnpm.io/install.sh | sh -s -- --version 9.0.0
          echo "PNPM_HOME=$PNPM_HOME" >> $GITHUB_ENV
          echo "$PNPM_HOME" >> $GITHUB_PATH
      - name: Configure pnpm store
        run: pnpm config set store-dir ~/.pnpm-store
      - name: Get Node Version
        id: node-version
        run: echo "version=$(node -v)" >> $GITHUB_OUTPUT
      - name: Mount pnpm store
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-${{ steps.node-version.outputs.version }}-pnpm-store
          path: ~/.pnpm-store
      - name: Install dependencies
        run: pnpm install --silent
      - uses: nrwl/nx-set-shas@v4
      - name: worker deployment
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          GIT_COMMIT_SHA: ${{ github.sha }}
        run: pnpm exec nx run-many --target=deploy --projects=${{ matrix.app }} --prod
