name: Main
on:
  push:
    branches: [main, stage]
  pull_request:
    branches: [main, feature/*]
jobs:
  deploy:
    strategy:
      matrix:
        app: [docs, journeys, journeys-admin, watch]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Fetch other branches
        if: ${{ github.event_name == 'pull_request' }}
        run: git fetch --no-tags --prune --depth=5 origin $GITHUB_BASE_REF
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-
      - name: NPM Install
        run: npm install --silent
      - uses: mansagroup/nrwl-nx-action@v3
        name: vercel preview deployment
        if: ${{ github.event_name == 'pull_request' }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          DOCS_VERCEL_PROJECT_ID: ${{ secrets.DOCS_VERCEL_PROJECT_ID }}
          JOURNEYS_VERCEL_PROJECT_ID: ${{ secrets.JOURNEYS_VERCEL_PROJECT_ID }}
          JOURNEYS_ADMIN_VERCEL_PROJECT_ID: ${{ secrets.JOURNEYS_ADMIN_VERCEL_PROJECT_ID }}
          WATCH_VERCEL_PROJECT_ID: ${{ secrets.WATCH_VERCEL_PROJECT_ID }}
        with:
          targets: deploy
          project: ${{ matrix.app }}
      - uses: mansagroup/nrwl-nx-action@v3
        name: vercel production deployment
        if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          JOURNEYS_VERCEL_PROJECT_ID: ${{ secrets.JOURNEYS_VERCEL_PROJECT_ID }}
        with:
          targets: deploy
          args: --prod
          project: ${{ matrix.app }}
      - name: Generate GitHub deploy preview comment
        run: ./tools/scripts/generate-deploy-preview-comment.sh
      - uses: mshick/add-pr-comment@v2
        name: Add deploy preview comment
        with:
          message-path: .github/deploy_preview_comment.md
